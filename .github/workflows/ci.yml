name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Run build
        run: npm run build

      - name: Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          fail_ci_if_error: false

  build:
    name: Build & Validate
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Test build output
        run: |
          # Check that built files exist
          test -f dist/index-stdio.js
          test -f dist/index.js
          test -f dist/index-stdio.d.ts
          test -f dist/index.d.ts
          
      - name: Check package size
        run: |
          npm pack --dry-run
          npm pack --json | jq '.[0].size' | xargs -I {} echo "Package size: {} bytes"
          
      - name: Validate Smithery config
        run: |
          # Check smithery.yaml exists and is valid YAML
          test -f smithery.yaml
          npx js-yaml smithery.yaml > /dev/null

      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Start server and test health
        run: |
          # Start HTTP server in background on port 3000
          PORT=3000 npm run start:http &
          SERVER_PID=$!
          
          # Wait for server to start
          sleep 5
          
          # Test health endpoint
          curl -f http://localhost:3000/healthz || exit 1
          
          # Test MCP endpoint with basic request
          curl -X POST http://localhost:3000/mcp \
            -H "Content-Type: application/json" \
            -H "Accept: application/json, text/event-stream" \
            -d '{"jsonrpc":"2.0","id":1,"method":"initialize","params":{"protocolVersion":"2025-03-26","capabilities":{}}}' \
            || exit 1
          
          # Kill server
          kill $SERVER_PID

      - name: Test STDIO mode
        run: |
          # Test that stdio mode starts without errors
          timeout 5s npm start < /dev/null || [ $? -eq 124 ]