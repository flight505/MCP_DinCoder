# Smithery configuration file
name: "mcp-dincoder"
description: "DinCoder - Driven Intent Negotiation Contract-Oriented Deterministic Executable Runtime"
version: "0.1.1"
displayName: "DinCoder"
summary: "The Spec-Driven MCP server for Intent → Contracts → Deterministic Execution"
homepage: "https://github.com/dincoder/mcp-server"
repository: "https://github.com/dincoder/mcp-server"
keywords:
  - spec-driven-development
  - sdd
  - ai-coding
  - contract-oriented
  - deterministic
  - spec-kit
  - github
  - claude-code
  - copilot
  - mcp

# Build configuration
build:
  dockerfile: Dockerfile
  dockerBuildPath: .

# Server configuration for Smithery compatibility
startCommand:
  type: streamable-http
  port: 3000
  configSchema:
    type: object
    properties:
      apiKey:
        type: string
        description: "Optional API key for authentication"
      originWhitelist:
        type: string
        description: "Comma-separated list of allowed origins"
      transportMode:
        type: string
        description: "Transport mode: stateless or stateful"
        default: "stateless"
        enum: ["stateless", "stateful"]
    required: []
  commandFunction: |-
    config => ({
      command: 'node',
      args: ['dist/index.js'],
      env: {
        PORT: '3000',
        TRANSPORT_MODE: config.transportMode || 'stateless',
        API_KEY: config.apiKey || '',
        ORIGIN_WHITELIST: config.originWhitelist || '',
        NODE_ENV: 'production',
        MCP_TRANSPORT: 'streamable-http'
      }
    })